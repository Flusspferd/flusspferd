// -*- mode:js2; -*- vim: ft=javascript:

/** section: Bundled Modules
 * readline
 * 
 * Readline is a very simple wrapper for the
 * [GNU/Readline](http://tiswww.case.edu/php/chet/readline/rltop.html) or
 * [libedit](http://www.thrysoee.dk/editline/) library. Currently only a
 * few functions are exported. But it is easy to add more.
 * 
 * Libedit is a BSD licensed alternative for the GNU/Readline library but it is
 * inferior to GNU/Readline (e.g. no UTF-8 support!). We recommend using
 * GNU/Readline (Configure Flusspferd with `-DLINE_EDITOR=readline` set) but it
 * might not be feasible for everyone due to the GPL.
 * 
 * ## Example #
 *
 * A simple JavaScript REPL in Flusspferd.
 * 
 *     const Readline = require('readline');
 *
 *     Readline.usingHistory();
 *
 *     try {
 *         Readline.readHistory("/tmp/hist.txt");
 *     }
 *     catch(e) { }
 *
 *     var str;
 *     while( (str = Readline.readline('# ')) ) {
 *         print(eval(str).toSource());
 *         Readline.addHistory(str);
 *         gc();
 *     }
 *
 *     Readline.writeHistory("/tmp/hist.txt");
 *
 **/

/**
 * readline.readline([prompt]) -> string or undefined
 * - prompt (String): The prompt is displayed at the beginning of the input line (default: none).
 *
 * Read a line using readline / libedit.
 **/

/**
 * readline.usingHistory() -> undefined
 *
 * Initialise the history. Call this before using other functions regarding history.
 **/

/**
 * readline.readHistory([filename = "~/.history"]) -> undefined
 * - filename (String): Add the content of the file (line by line) to the history.
 * 
 * Add file content to history.
 **/

/**
 * readline.addHistory(input) -> undefined
 * - input (String): Add input to the history.
 *
 * Add a line to the history.
 **/

/**
 * readline.writeHistory([filename = "~/.history"]) -> undefined
 * - filename (String): File to write history to.
 *
 * Write history to a file.
 **/